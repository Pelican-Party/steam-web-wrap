name: Prepare Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The new version. This will be used as argument for the 'npm version' command. For instance, providing 'minor' will cause the minor version to get bumped."
        type: string
        required: true

jobs:
  bump-version:
    name: Bump Version
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          NEW_VERSION=$(npm version ${{ inputs.version }})
          echo "$NEW_VERSION" > version.txt
          git push
      - name: Store version artifact
        uses: actions/upload-artifact@v4
        with:
          name: version
          path: version.txt

  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    needs: bump-version
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - run: npm i
      - run: npm run build-linux
      - name: Store release artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: out/linux.zip

  build-windows:
    name: Build Windows
    runs-on: windows-latest
    needs: bump-version
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - run: npm i
      - run: npm run build-windows
      - name: Store release artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: out/windows.zip

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows]
    permissions:
      contents: write # Required for creating GitHub releases
    steps:
      - name: Download linux artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-build
      - name: Download windows artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-build
      - name: Download version artifact
        uses: actions/download-artifact@v4
        with:
          name: version
      - name: Create release
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require("fs");
            const version = fs.readFileSync("version.txt", { encoding: "utf8" }).trim();
            const { owner, repo } = context.repo;
            const { data: releaseData } = await github.rest.repos.createRelease({
              owner,
              repo,
              tag_name: version,
              name: version,
              draft: true,
              generate_release_notes: true,
            });

            async function uploadZip(platform, label) {
            const fileName = platform + ".zip";
              await github.rest.repos.uploadReleaseAsset({
                url: releaseData.upload_url,
                headers: {
                  "content-type": "application/zip",
                  "content-length": fs.statSync(fileName).size
                },
                data: fs.createReadStream(fileName),
                name: "sww-" + platform + "-" + version + ".zip",
                label,
              });
            }

            await uploadZip("linux", "Linux Build");
            await uploadZip("windows", "Windows Build");
